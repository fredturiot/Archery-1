@model Archery.Models.Tournament

@{
    ViewBag.Title = "Tournoi: Modification";
}

<h2>Modifier un Tournoi</h2>
<div class="row">
    <div class="col-md-6">


        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.ID)

                <div class="form-group">
                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Location, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Location, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Location, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <label class="control-label col-md-2">Armes</label>
                    <div class="col-md-10">
                        @Html.ListBox("BowsID", (MultiSelectList)ViewData["Bowtypes"], new { @class = "form-control" })

                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Capacity, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Capacity, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Capacity, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.StartDate, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.StartDate, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.EndDate, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.EndDate, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.EndDate, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.FeePerson, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.FeePerson, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.FeePerson, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Enregistrer les modifications" class="btn btn-info" />
                    </div>
                </div>
            </div>
        }

    </div>
    <div class="col-md-6">
        <h3>Images</h3>
        <form action="@Url.Action("AddPicture", "Tournaments")" method="post" enctype="multipart/form-data"> @* enctype form-data pour envoyer un fichier  *@
        @Html.HiddenFor(x => x.ID)    
        <div class="form-group">
                <label for="if">Fichier</label>
                <input type="file" id="if" name="picture" /> @*dans l'input, la valeur envoyée dans la requête post est donnée par le name*@
            </div>
            <button type="submit" class="btn btn-info"> Enregistrer</button>
        </form>
        <div class="row">
           @if(Model.Pictures != null)
           {
               foreach(var picture in Model.Pictures)
               {
            <div class="col-md-3">

                <img src="data:@picture.ContentType;base64,@Convert.ToBase64String(picture.Content)" class="img-thumbnail" />
                <p><a id="delete" href="@Url.Action("DeletePicture", "Tournaments", new {id=picture.ID, idtournoi=picture.TournamentID })"> <i class="glyphicon glyphicon-trash"></i> </a></p>
            </div>
               }
           }
        </div>
    </div>
</div>

<div>
    @Html.ActionLink("Retour à la Liste", "Index")
</div>


@section SectionScripts{
    <script src="~/Scripts/jquery.datetimepicker.js"></script>
    <script src="~/Scripts/tinymce/tinymce.min.js"></script>
    <script>
        $(function () {
            //$.setLocale('fr');
            $('#StartDate').datetimepicker({
                lang: 'fr',
                step: 15,
                format: 'd/m/20y H:i'
            });
            $('#EndDate').datetimepicker({
                lang: 'fr',
                step: 15,
                format: 'd/m/20y H:i'
            });
            tinymce.init({ selector: '#Description', lang: 'fr' });
        })
            
        const btn = document.querySelector('#delete');
        btn.addEventListener('click', ev => {
            if (confirm("Voulez-vous supprimer cette photo ?") == false) {
                ev.preventDefault();
            }
        });



    </script>
}